{
	"info": {
		"_postman_id": "8fe6c67d-1664-4e1f-9be1-40b7fddf8165",
		"name": "introduction-to-microservices",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3162383"
	},
	"item": [
		{
			"name": "song service",
			"item": [
				{
					"name": "/",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type header is present and set to text/plain\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"text/plain\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response body contains the expected error message for the 'duration' field\", function () {\r",
									"    const expectedErrorMessage = \"invalid date format\";\r",
									"    pm.expect(pm.response.text()).to.include(expectedErrorMessage);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response body contains expected error message for rejected value [02:445]\", function () {\r",
									"    const expectedErrorMessage = \"Validation failed for argument [0] in public java.lang.String epam.task.song.controller.SongController.createSong(epam.task.song.reqres.SongDto): [Field error in object 'songDto' on field 'duration': rejected value [02:445]; codes [DateTimeFormat.songDto.duration,DateTimeFormat.duration,DateTimeFormat.java.lang.String,DateTimeFormat]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [songDto.duration,duration]; arguments []; default message [duration],mm:ss]; default message [invalid date format]]\";\r",
									"\r",
									"    pm.expect(pm.response.text()).to.include(expectedErrorMessage);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"1\",\r\n    \"name\": \"name\",\r\n    \"artist\": \"ll\",\r\n    \"album\": \"alb\",\r\n    \"duration\": \"02:45\",\r\n    \"year\": \"2025\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{song-service}}",
							"host": [
								"{{song-service}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/{ids} correct Copy",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{song-service}}?id=1,2,3,4,5",
							"host": [
								"{{song-service}}"
							],
							"query": [
								{
									"key": "id",
									"value": "1,2,3,4,5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/{id}",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{song-service}}/1",
							"host": [
								"{{song-service}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "resource service",
			"item": [
				{
					"name": "/",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{resource-service}}",
							"host": [
								"{{resource-service}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/{id}",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{resource-service}}/1",
							"host": [
								"{{resource-service}}"
							],
							"path": [
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/{ids} correct",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{resource-service}}?id=1,2,3,4,5",
							"host": [
								"{{resource-service}}"
							],
							"query": [
								{
									"key": "id",
									"value": "1,2,3,4,5"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "resource-service",
			"value": "http://localhost:8081/resources",
			"type": "string"
		},
		{
			"key": "song-service",
			"value": "http://localhost:8082/songs",
			"type": "string"
		}
	]
}